import pandas as pd
import numpy as np 

qwd	qw
asdasda

pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)
pd.set_option('display.max_colwidth', None)
#df = pd.read_excel( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Projeto_Sherlock_Holmes.xlsx",sheet_name = "Copia_Resultado_Difusao")
df = pd.read_csv( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Teste H2H/Check_Nome_CUltivares.csv")

#Aqui eu pego as Cultivares estranhas que separei e tiro as duplicatas, gerando uma lista unica de Cultivar "estranha"
#df_suspeito = pd.read_excel( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Projeto_Sherlock_Holmes.xlsx", sheet_name ="Lista_Cultivar_Estranha_com_rep")
#df_suspeito = df_suspeito.drop_duplicates(subset=['Cultivar'], keep='first')
#lista_cultivar_estranha = []
#for i in df_suspeito["Cultivar"]:
#	lista_cultivar_estranha.append(i)
#print('Lista de Cultivares que não estão com nome padronizado por ADM\n',lista_cultivar_estranha,'\n')
#df = df.drop_duplicates(subset='Cultivares', keep="last")
df = df.drop_duplicates(subset='Cultivar', keep="last")
#print(df["Cultivares"])
#df = pd.read_excel( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Projeto_Sherlock_Holmes.xlsx",sheet_name = "Copia_Resultado_Difusao")
df = pd.read_csv( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Teste H2H/df_H2H_Cru.csv")

lista_Cultivar_Corretas = [
#Concorrentes
"ADV4341IPRO",
"AFS110RR",
"AS3590IPRO",
"AS3615I2X",
"AS3680IPRO",
"AS3707I2X",
"AS3730IPRO",
"AS3810IPRO",
"AS3838I2X",
"AS3850IPRO",
"B5830CE",
"BMXATAQUEI2X",
"BMXBONUSIPRO",
"BMXCERTAIPRO",
"BMXCOLISEUI2X",
"BMXCOMPACTAIPRO",
"BMXCROMOIPRO",
"BMXDELTAIPRO",
"BMXDESAFIORR",
"BMXDOMINIOIPRO",
"BMXEXTREMAIPRO",
"BMXFIBRAIPRO",
"BMXFOCOIPRO",
"BMXFORTALEZAIPRO",
"BMXGARRAIPRO",
"BMXGUEPARDOIPRO",
"BMXLANCAIPRO",
"BMXLENDARIACE",
"BMXLOTUSIPRO",
"BMXNEXUSI2X",
"BMXOLIMPOIPRO",
"BMXORIGEMIPRO",
"BMXRAIOIPRO",
"BMXRESULTAE",
"BMXTANQUEI2X",
"BMXTORMENTACE",
"BMXTORQUEI2X",
"BMXTROVAOI2X",
"BMXULTRAIPRO",
"BMXVENUSCE",
"BMXVORAZIPRO",
"BMXZEUSIPRO",
"BS2606IPRO",
"CZ15B70IPRO",
"CZ37B43IPRO",
"CZ37B60IPRO",
"CZ47B90IPRO",
"CZ48B32IPRO",
"CZ58B23I2X",
"CZ58B28IPRO",
"CZPOTENTI2X",
"CZRESULTI2X",
"DM53I54IPRO",
"DM57I52IPRO",
"DM5958IPRO",
"DM60I63IPRO",
"DM64I63IPRO",
"DM66I68IPRO",
"DM68I69IPRO",
"DM69IX69I2X",
"DM70I71IPRO",
"DM73I75IPRO",
"DM74I75IPRO",
"DM74K75CE",
"DM75I74IPRO",
"DM79I81IPRO",
"DM80I79IPRO",
"DM80IX83I2X",
"DM81I84IPRO",
"DM82I78IPRO",
"DM82K84CE",
"DS7417IPRO",
"ELISAIPRO",
"FPS1859RR",
"FPS1867IPRO",
"FT3191IPRO",
"FT3868IPRO",
"FT4280IPRO",
"HOAMAMBAYIPRO",
"HOAPOREIPRO",
"HOCAIAPOIPRO",
"HOCORUMBAIPRO",
"HOCOXIMIPRO",
"HOCRISTALINOIPRO",
"HOIGUACUIPRO",
"HOGUAPOREI2X",
"HOIRIRIIPRO",
"HOJURUENAIPRO",
"HOMAMOREIPRO",
"HOMARACAIIPRO",
"HOPARAGUACUI2x",
"HOPIRAPOIPRO",
"KWS6316IPRO",
"KWS6719IPRO",
"KWS7518IPRO",
"LG60162IPRO",
"LG60177IPRO",
"LG60184IPRO",
"M5838IPRO",
"M5917IPRO",
"M5947IPRO",
"M6100I2X",
"M6101I2X",
"M6110I2X",
"M6210IPRO",
"M6301I2X",
"M6410IPRO",
"M7110IPRO",
"M7739IPRO",
"M8210IPRO",
"M8220I2X",
"M8323XTD",
"M8331I2X",
"M8349IPRO",
"M8372IPRO",
"M8606I2X",
"M8644IPRO",
"M8808IPRO",
"NEO530IPRO",
"NEO580IPRO",
"NEO590I2X",
"NEO610IPRO",
"NEO710IPRO",
"NEO740IPRO",
"NEO750IPRO",
"NEO760CE",
"NEO790IPRO",
"NEO820IPRO",
"NEO850CE",
"P05Y02IPRO",
"P95R10IPRO",
"P95R51RR",
"P95R95IPRO",
"P96R10IPRO",
"P96R29IPRO",
"P97R50IPRO",
"P98Y21IPRO",
"P98Y97IPRO",
"RK7518IPRO",
"SOYAMPLAIPRO",
"SOYCOMBATEIPRO",
"ST490I2X",
"ST580I2X",
"ST621I2X",
"ST622IPRO",
"ST631I2X",
"ST700I2X",
"ST794I2X",
"ST800I2X",
"ST804IPRO",
"ST820I2X",
"ST830IPRO",
"SUZIIPRO",
"TEC6702IPRO",
"TMG1180RR",
"TMG2165IPRO",
"TMG2185IPRO",
"TMG2285IPRO",
"TMG2359IPRO",
"TMG2364IPRO",
"TMG2374IPRO",
"TMG2379IPRO",
"TMG2381IPRO",
"TMG2383IPRO",
"TMG2757IPRO",
"TMG2776IPRO",
"TMG7062IPRO",
"TMG7063IPRO",
"TMG7260IPRO",
"TMG7368IPRO",

#Paraguay
"BMXCOMPACTA65i65IPRORSF",
"BMXDELTA59i60IPRORSF",
"BMXFIBRA64i61IPRORSF",
"BMXGARRA63i64IPRO",
"BMXZEUS55i57IPRORSF",
"BS1950003",
"CZ6205RR",
"CZ6505RR",
"DM60i62IPRO",
"DM62R63RR",
"DM66I68IPRO",
"DM66R69RR",
"DMC66IPRO",
"GP5715RG",
"GP6519RG",
"GP6619RG",
"HOAMAMBAYIPRO",
"HOPIRAPOIPRO",
"LDC59MS01IPRO",
"MY5705IPRO",
"MY5947IPRO",
"My6210IPRO",
"MY6410IPRO",
"NA5909RG",
"NS5258RR",
"NS5700IPRO",
"NS5933IPRO",
"NS6220IPRO",
"NS6248RR",
"NS6483RR",
"NS6601IPRO",
"NS6700IPRO",
"NS6906IPRO",
"SOJAPARR19",
"SYN15630IPRO",
"TMG7061IPROINOX",
"TMG7463INOX",

#Syngenta
"SYN1687IPRO",
"SYN2083IPRO",
"SYN2282IPRO",
"SYN2376IPRO",
"SYN2384IPRO",
"SYN2478IPRO",
"NS5115I2X",
"NS5505I2X",
"NS5933IPRO",
"NS5958IPRO",
"NS6220IPRO",
"NS6433I2X",
"NS6601IPRO",
"NS6700IPRO",
"NS6828IPRO",
"NS6909IPRO",
"NS6996IPRO",
"NS7007IPRO",
"NS7555IPRO",
"NS7700IPRO",
"NS7790IPRO",
"NS7901RR",
"NS7933CE",
"NS8080IPRO",
"NS8109IPRO",
"NS8383RR",
"NS8397IPRO",
"NS8400IPRO",
"NS8590IPRO",
"NS8595IPRO",
"NK7777IPRO"
]


#Aqui eu comparo a lista com as cultivares estranhas com o a coluna Cultivar da difusão e separo por ADM
#lista_das_linhas_erradas = []



for i in lista_Cultivar_Corretas:
	df['Who'] = np.where(df['Cultivar'] != i, "Escrito Errado", "Escrito Correto")
	df = df[(df['Who'] == "Escrito Errado")]
df = df[df['Cultivar'].notna()]
df = df.drop_duplicates(subset='Cultivar', keep="last")
df = df.groupby(["Distrito Sede do ADM"])["Cultivar"].apply(list)
print(df)


#print(df[["ADM","Cultivares"]].apply(list))	
	#df = df.drop_duplicates(subset=['Cultivares'], keep='first')
	#lista_das_linhas_erradas.append(df.index)
	#print(i, df[["ADM","Código Cliente","Código GD",'Cultivares']].apply(list),'\n\n')
	#df = pd.read_excel( "C:/Users/s1057984/OneDrive - Syngenta/Área de Trabalho/Syngenta/Projeto_Sherlock_Holmes.xlsx",sheet_name = "Copia_Resultado_Difusao")
#print(lista_index_cult)

